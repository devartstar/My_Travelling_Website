.row{
    max-width: $grid-width;
    //background-color: #eee;
    margin: 0 auto; //to centre the element ...browser automaticaly calculate the leftand right margin
    //  .row:not()...will do everything specified except the last child
    &:not(:last-child){
        margin-bottom: $gutter-vertical;

        @include respond(tab-port){
            margin-bottom: $gutter-vertical-small;
        }

        @include respond(tab-port){
            max-width: 50rem;
            padding: 0 3rem;
        }
    }
    // calc()  ... allows to calculation with mixing of units

    @include respond(tab-port){
        max-width: 50rem;
    }


    @include clearfix;
    //we use a selector
    [class^="col-"]{    // selects all elements whose class attribute starts with col-
            //  [class*="col-"]  this selects all elements whose class attribute contains col-
            // [class$="col-"]   this selects all elements whose class ends with col-
        //background-color: orangered;
        float:left;
    
        &:not(:last-child){
            margin-right: $gutter-horizontal;

            @include respond(tab-port){
                margin-right: 0;
                margin-bottom: $gutter-vertical-small;
            }
        } 

        @include respond(tab-port){
            width: 100% !important;
        }
    }

    .col-1-of-2{
        width: calc((100% - #{$gutter-horizontal})/2);
    }
    
    .col-1-of-3{
        width:calc((100% - 2 * #{$gutter-horizontal})/3);
    }

    .col-1-of-4{
        width: calc((100% - 3 *#{$gutter-horizontal})/4);
    }

    .col-2-of-3{
        width: calc(((100% - 2 * #{$gutter-horizontal})/3)*2 + #{$gutter-horizontal});
    }

    .col-2-of-4{
        width: calc(((100% - 3 *#{$gutter-horizontal})/4)*2 + #{$gutter-horizontal})
    }

    .col-3-of-4{
        width: calc(((100% - 3 *#{$gutter-horizontal})/4)*3 + 2 * #{$gutter-horizontal})
    }
    
}  